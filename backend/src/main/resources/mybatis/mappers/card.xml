<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="card">

	<select id="findCard" resultType="cardvo" parameterType="long">
		<![CDATA[
			select no, deck_no as deckNo, title, description, start_date as startDate, end_date as endDate, sequence, finished
				from card 
				where deck_no = #{deck_no}
		]]>
	</select>
	
	<select id="findCardUser" resultType="uservo" parameterType="long">
		<![CDATA[
			select u.no, u.name, u.email , pm.leader, pm.manager
				from user u, proj_member pm 
			    where u.no = pm.user_no 
			    and pm.project_no=#{projectNo}
		]]>
	</select>

	<insert id="createCard" parameterType="cardvo">
		<![CDATA[
		insert into card 
		values(null, #{deckNo }, #{title }, #{description }, #{startDate }, #{endDate}, (SELECT IFNULL(MAX(d.sequence) + 1, 1) 
		FROM card c, deck d where d.no = #{deckNo } and c.deck_no = d.no), 'N')
		]]>

		<selectKey keyProperty="no" resultType="long" order="AFTER">
			<![CDATA[
		  	select last_insert_id()
	  		]]>
		</selectKey>
	</insert>
	
	<insert id="insertMember" parameterType="map">
		<![CDATA[
			insert into card_member
			 values(#{deckNo }, #{cardNo }, #{userVo.no })
		]]>	
	</insert>
	
	<insert id="commentInsert" parameterType="commentvo">
      <![CDATA[
         insert into comment values(null, #{cardNo}, #{content}, #{date}, #{userNo}, #{projectNo})
      ]]>
      <selectKey keyProperty="no" resultType="long" order="AFTER">
		<![CDATA[
		  select last_insert_id()
	  	]]>
	  </selectKey>
   </insert>
   
   <select id="findComment" parameterType="long" resultType="commentvo">
      <![CDATA[
         select b.name as userName, a.content, a.date 
            from comment a, user b
            where a.user_no = b.no 
            and a.card_no=#{cardNo } 
            order by a.date asc
      ]]>
   </select>
   
   <update id="updateCard" parameterType="cardvo">
		<![CDATA[
		update card
		 set title = #{title }, description= #{description }, start_date=#{startDate}, end_date = #{endDate } 
		where no = #{no }
		]]>
	</update>
	
	<insert id="updateMember" parameterType="map">
		<![CDATA[
			insert into card_member
			 values (${deckNo }, ${cardNo }, ${userVo.no })
		]]>	
	</insert>
	
	<delete id="updateCardMemberD" parameterType="map">
		<![CDATA[
			delete from card_member
			 where = user_no ${userNo }
		]]>	
	</delete>
	
	<select id="findCurrentCardMember" resultType="uservo" parameterType="long">
		<![CDATA[
			select u.no, u.name, u.email
				from user u, card_member cm 
			    where u.no = cm.user_no
			    and cm.card_no=#{cardNo }
		]]>
	</select>
	
	<select id="findCardInfo" resultType="cardvo" parameterType="long">
		<![CDATA[
			select no, title, description, start_date as startDate, end_date as endDate
				from card 
				where no = #{no};
		]]>
	</select>
	
	<delete id="deleteMember" parameterType="map">
		<![CDATA[
			delete from card_member where deck_no = ${deckNo } and card_no = ${cardNo } and user_no = ${userVo.no}
		]]>
	</delete>
	
	<insert id="memberUpdate" parameterType="map">
		<![CDATA[
			insert into card_member
			 values (${deckNo }, ${cardNo }, ${userVo.no })
		]]>
	</insert>
	
	<delete id="deleteTask" parameterType="long">
		<![CDATA[
			delete from task where card_no = #{no}
		]]>
	</delete>
	
	<delete id="deleteComment" parameterType="long">
		<![CDATA[
			delete from comment where card_no = #{no}
		]]>
	</delete>
	
	<delete id="deleteCard" parameterType="long">
		<![CDATA[
			delete from card where no = #{no }
		]]>
	</delete>
	
	<delete id="deleteCardMember" parameterType="long">
		<![CDATA[
			delete from card_member where card_no = #{no}
		]]>
	</delete>
	

	<delete id="deleteCardNotice" parameterType="long">
		<![CDATA[
			delete from notice where card_no = #{no } and type= "card"
		]]>
	</delete>

	<select id="findTaskCount" resultType="long" parameterType="long">
		<![CDATA[
			select count(*) from task where card_no = #{cardNo}
		]]>
	</select>
	
	<select id="findNCount" resultType="long" parameterType="long">
		<![CDATA[
			select count(*) from task where card_no = #{cardNo} and finished="N";
		]]>
	</select>
	
	<update id="updateOrderNo" parameterType="map">
		<![CDATA[
			update card
			   set sequence=#{orderNo}, deck_no=#{deckNo}
			 where no=#{no}
	  	]]>
	</update>

	<update id="updateOrderNos" parameterType="map">
		<choose>
			<when test="ascending">
				<![CDATA[
					update card
					   set sequence = sequence + 1
					 where deck_no = #{deckNo}
					   and sequence >= #{sequence}
	  			]]>
			</when>
			<otherwise>
				<![CDATA[
					update card
					   set sequence = sequence - 1
					 where deck_no = #{deckNo}
					   and sequence > #{sequence}
	  			]]>
			</otherwise>
		</choose>
	</update>
	
</mapper>
